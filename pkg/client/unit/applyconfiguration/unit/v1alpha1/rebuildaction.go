/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// RebuildActionApplyConfiguration represents an declarative configuration of the RebuildAction type for use
// with apply.
type RebuildActionApplyConfiguration struct {
	OnlyPod      *bool   `json:"only_pod,omitempty"`
	Start        *bool   `json:"start,omitempty"`
	Force        *bool   `json:"force,omitempty"`
	NodeName     *string `json:"nodeName,omitempty"`
	RetainVolume *bool   `json:"retain_volume,omitempty"`
}

// RebuildActionApplyConfiguration constructs an declarative configuration of the RebuildAction type for use with
// apply.
func RebuildAction() *RebuildActionApplyConfiguration {
	return &RebuildActionApplyConfiguration{}
}

// WithOnlyPod sets the OnlyPod field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OnlyPod field is set to the value of the last call.
func (b *RebuildActionApplyConfiguration) WithOnlyPod(value bool) *RebuildActionApplyConfiguration {
	b.OnlyPod = &value
	return b
}

// WithStart sets the Start field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Start field is set to the value of the last call.
func (b *RebuildActionApplyConfiguration) WithStart(value bool) *RebuildActionApplyConfiguration {
	b.Start = &value
	return b
}

// WithForce sets the Force field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Force field is set to the value of the last call.
func (b *RebuildActionApplyConfiguration) WithForce(value bool) *RebuildActionApplyConfiguration {
	b.Force = &value
	return b
}

// WithNodeName sets the NodeName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NodeName field is set to the value of the last call.
func (b *RebuildActionApplyConfiguration) WithNodeName(value string) *RebuildActionApplyConfiguration {
	b.NodeName = &value
	return b
}

// WithRetainVolume sets the RetainVolume field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RetainVolume field is set to the value of the last call.
func (b *RebuildActionApplyConfiguration) WithRetainVolume(value bool) *RebuildActionApplyConfiguration {
	b.RetainVolume = &value
	return b
}
