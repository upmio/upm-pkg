/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	unitsetv1alpha1 "github.com/upmio/upm-pkg/pkg/apis/unitset/v1alpha1"
	v1 "k8s.io/api/core/v1"
)

// UnitsetSpecApplyConfiguration represents an declarative configuration of the UnitsetSpec type for use
// with apply.
type UnitsetSpecApplyConfiguration struct {
	Image                *ImageVersionApplyConfiguration       `json:"image,omitempty"`
	Architecture         *ArchitectureApplyConfiguration       `json:"architecture,omitempty"`
	SharedConfigName     *string                               `json:"sharedConfigName,omitempty"`
	VolumeClaimTemplates []v1.PersistentVolumeClaim            `json:"volumeClaimTemplates,omitempty"`
	Action               *unitsetv1alpha1.Action               `json:"action,omitempty"`
	Template             *UnitTemplateApplyConfiguration       `json:"template,omitempty"`
	ExternalSecret       *ExternalSecretInfoApplyConfiguration `json:"externalSecret,omitempty"`
}

// UnitsetSpecApplyConfiguration constructs an declarative configuration of the UnitsetSpec type for use with
// apply.
func UnitsetSpec() *UnitsetSpecApplyConfiguration {
	return &UnitsetSpecApplyConfiguration{}
}

// WithImage sets the Image field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Image field is set to the value of the last call.
func (b *UnitsetSpecApplyConfiguration) WithImage(value *ImageVersionApplyConfiguration) *UnitsetSpecApplyConfiguration {
	b.Image = value
	return b
}

// WithArchitecture sets the Architecture field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Architecture field is set to the value of the last call.
func (b *UnitsetSpecApplyConfiguration) WithArchitecture(value *ArchitectureApplyConfiguration) *UnitsetSpecApplyConfiguration {
	b.Architecture = value
	return b
}

// WithSharedConfigName sets the SharedConfigName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SharedConfigName field is set to the value of the last call.
func (b *UnitsetSpecApplyConfiguration) WithSharedConfigName(value string) *UnitsetSpecApplyConfiguration {
	b.SharedConfigName = &value
	return b
}

// WithVolumeClaimTemplates adds the given value to the VolumeClaimTemplates field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the VolumeClaimTemplates field.
func (b *UnitsetSpecApplyConfiguration) WithVolumeClaimTemplates(values ...v1.PersistentVolumeClaim) *UnitsetSpecApplyConfiguration {
	for i := range values {
		b.VolumeClaimTemplates = append(b.VolumeClaimTemplates, values[i])
	}
	return b
}

// WithAction sets the Action field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Action field is set to the value of the last call.
func (b *UnitsetSpecApplyConfiguration) WithAction(value unitsetv1alpha1.Action) *UnitsetSpecApplyConfiguration {
	b.Action = &value
	return b
}

// WithTemplate sets the Template field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Template field is set to the value of the last call.
func (b *UnitsetSpecApplyConfiguration) WithTemplate(value *UnitTemplateApplyConfiguration) *UnitsetSpecApplyConfiguration {
	b.Template = value
	return b
}

// WithExternalSecret sets the ExternalSecret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExternalSecret field is set to the value of the last call.
func (b *UnitsetSpecApplyConfiguration) WithExternalSecret(value *ExternalSecretInfoApplyConfiguration) *UnitsetSpecApplyConfiguration {
	b.ExternalSecret = value
	return b
}
