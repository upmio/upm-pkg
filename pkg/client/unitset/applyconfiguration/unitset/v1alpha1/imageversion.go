/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ImageVersionApplyConfiguration represents an declarative configuration of the ImageVersion type for use
// with apply.
type ImageVersionApplyConfiguration struct {
	Type  *string `json:"type,omitempty"`
	Major *int    `json:"major,omitempty"`
	Minor *int    `json:"minor,omitempty"`
	Patch *int    `json:"patch,omitempty"`
	Dev   *int    `json:"build,omitempty"`
	Arch  *string `json:"arch,omitempty"`
}

// ImageVersionApplyConfiguration constructs an declarative configuration of the ImageVersion type for use with
// apply.
func ImageVersion() *ImageVersionApplyConfiguration {
	return &ImageVersionApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *ImageVersionApplyConfiguration) WithType(value string) *ImageVersionApplyConfiguration {
	b.Type = &value
	return b
}

// WithMajor sets the Major field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Major field is set to the value of the last call.
func (b *ImageVersionApplyConfiguration) WithMajor(value int) *ImageVersionApplyConfiguration {
	b.Major = &value
	return b
}

// WithMinor sets the Minor field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Minor field is set to the value of the last call.
func (b *ImageVersionApplyConfiguration) WithMinor(value int) *ImageVersionApplyConfiguration {
	b.Minor = &value
	return b
}

// WithPatch sets the Patch field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Patch field is set to the value of the last call.
func (b *ImageVersionApplyConfiguration) WithPatch(value int) *ImageVersionApplyConfiguration {
	b.Patch = &value
	return b
}

// WithDev sets the Dev field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Dev field is set to the value of the last call.
func (b *ImageVersionApplyConfiguration) WithDev(value int) *ImageVersionApplyConfiguration {
	b.Dev = &value
	return b
}

// WithArch sets the Arch field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Arch field is set to the value of the last call.
func (b *ImageVersionApplyConfiguration) WithArch(value string) *ImageVersionApplyConfiguration {
	b.Arch = &value
	return b
}
