/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ArchApplyConfiguration represents an declarative configuration of the Arch type for use
// with apply.
type ArchApplyConfiguration struct {
	Nodes  *int    `json:"nodes,omitempty"`
	Shards *int    `json:"shards,omitempty"`
	Mode   *string `json:"mode,omitempty"`
	Desc   *string `json:"desc,omitempty"`
}

// ArchApplyConfiguration constructs an declarative configuration of the Arch type for use with
// apply.
func Arch() *ArchApplyConfiguration {
	return &ArchApplyConfiguration{}
}

// WithNodes sets the Nodes field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Nodes field is set to the value of the last call.
func (b *ArchApplyConfiguration) WithNodes(value int) *ArchApplyConfiguration {
	b.Nodes = &value
	return b
}

// WithShards sets the Shards field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Shards field is set to the value of the last call.
func (b *ArchApplyConfiguration) WithShards(value int) *ArchApplyConfiguration {
	b.Shards = &value
	return b
}

// WithMode sets the Mode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Mode field is set to the value of the last call.
func (b *ArchApplyConfiguration) WithMode(value string) *ArchApplyConfiguration {
	b.Mode = &value
	return b
}

// WithDesc sets the Desc field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Desc field is set to the value of the last call.
func (b *ArchApplyConfiguration) WithDesc(value string) *ArchApplyConfiguration {
	b.Desc = &value
	return b
}
